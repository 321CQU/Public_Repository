# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from micro_services_protobuf.course_score_query import model_pb2 as micro__services__protobuf_dot_course__score__query_dot_model__pb2


class CourseScoreQueryStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FindCourseByName = channel.unary_unary(
                '/course_score_query.CourseScoreQuery/FindCourseByName',
                request_serializer=micro__services__protobuf_dot_course__score__query_dot_model__pb2.FindCourseByNameRequest.SerializeToString,
                response_deserializer=micro__services__protobuf_dot_course__score__query_dot_model__pb2.FindCourseByNameResponse.FromString,
                )
        self.FetchLayeredScoreDetail = channel.unary_unary(
                '/course_score_query.CourseScoreQuery/FetchLayeredScoreDetail',
                request_serializer=micro__services__protobuf_dot_course__score__query_dot_model__pb2.FetchLayeredScoreDetailRequest.SerializeToString,
                response_deserializer=micro__services__protobuf_dot_course__score__query_dot_model__pb2.FetchLayeredScoreDetailResponse.FromString,
                )


class CourseScoreQueryServicer(object):
    """Missing associated documentation comment in .proto file."""

    def FindCourseByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FetchLayeredScoreDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CourseScoreQueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FindCourseByName': grpc.unary_unary_rpc_method_handler(
                    servicer.FindCourseByName,
                    request_deserializer=micro__services__protobuf_dot_course__score__query_dot_model__pb2.FindCourseByNameRequest.FromString,
                    response_serializer=micro__services__protobuf_dot_course__score__query_dot_model__pb2.FindCourseByNameResponse.SerializeToString,
            ),
            'FetchLayeredScoreDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchLayeredScoreDetail,
                    request_deserializer=micro__services__protobuf_dot_course__score__query_dot_model__pb2.FetchLayeredScoreDetailRequest.FromString,
                    response_serializer=micro__services__protobuf_dot_course__score__query_dot_model__pb2.FetchLayeredScoreDetailResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'course_score_query.CourseScoreQuery', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CourseScoreQuery(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def FindCourseByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/course_score_query.CourseScoreQuery/FindCourseByName',
            micro__services__protobuf_dot_course__score__query_dot_model__pb2.FindCourseByNameRequest.SerializeToString,
            micro__services__protobuf_dot_course__score__query_dot_model__pb2.FindCourseByNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FetchLayeredScoreDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/course_score_query.CourseScoreQuery/FetchLayeredScoreDetail',
            micro__services__protobuf_dot_course__score__query_dot_model__pb2.FetchLayeredScoreDetailRequest.SerializeToString,
            micro__services__protobuf_dot_course__score__query_dot_model__pb2.FetchLayeredScoreDetailResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
